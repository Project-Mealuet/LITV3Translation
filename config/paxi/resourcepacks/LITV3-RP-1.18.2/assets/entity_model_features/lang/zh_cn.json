{
    "entity_model_features.title": "实体模型特性",
    "entity_model_features.config.general": "通用",
    "entity_model_features.config.general.tooltip": "通用设置",
    "entity_model_features.config.substitute_vanilla": "替换丢失的模型部分",
    "entity_model_features.config.substitute_vanilla.tooltip": "EMF 将尝试用基础版的模型部分替代丢失的部分 .jem 模型文件",
    "entity_model_features.config.optimizations": "优化",
    "entity_model_features.config.optimizations.tooltip": "与动画优化相关的设置",
    "entity_model_features.config.debug": "调试",
    "entity_model_features.config.debug.tooltip": "调试选项，可帮助解决一些问题",
    "entity_model_features.config.log_models": "记录模型构建信息",
    "entity_model_features.config.log_models.tooltip": "将模型创建的调试数据记录到日志中",
    "entity_model_features.config.vanilla_render.normal": "正常",
    "entity_model_features.config.vanilla_render.offset": "偏移",
    "entity_model_features.config.vanilla_render": "基础版模型显示模式",
    "entity_model_features.config.vanilla_render.tooltip": "尝试渲染基础版模型以与自定义模型进行比较，不会执行动画，因此可能会有些奇怪的位置",
    "entity_model_features.config.log_math": "记录动画计算",
    "entity_model_features.config.log_math.tooltip": "将动画数学调试数据记录到日志中\n警告：可能导致极大的卡顿！",
    "entity_model_features.config.options": "选项和修复",
    "entity_model_features.config.options.tooltip": "各种用于基础功能或模组兼容性修复的选项",
    "entity_model_features.config.tools": "工具",
    "entity_model_features.config.tools.tooltip": "可选工具，用于模型制作或区分自定义模型",
    "entity_model_features.config.force_models": "尝试防止 EMF 模型被覆盖",
    "entity_model_features.config.force_models.tooltip": "将尝试强制实体渲染器使用 EMF 设置的模型，可能会覆盖其他模组更改的基础版模型，不适用于所有模组",
    "entity_model_features.config.unknown_model_print_mode.log": "仅记录",
    "entity_model_features.config.unknown_model_print_mode.log_jem": "记录和 .jem 文件",
    "entity_model_features.config.unknown_model_print_mode.tooltip": "这将打印出 EMF 可访问的任何未知或模组化模型的信息或完整的 .jem 文件\n注意：.jem 文件可能不完美，但可以作为起点",
    "entity_model_features.config.unknown_model_print_mode": "打印未知模型信息",
    "entity_model_features.config.physics": "物理模组修补 #2",
    "entity_model_features.config.physics.tooltip": "仅在启用物理模组时，才在死亡时渲染原始的基础版模型部分，这部分可以工作但不是完美的解决方案",
    "entity_model_features.config.texture_override_mode.emf": "使用 EMF 代码",
    "entity_model_features.config.texture_override_mode.dont": "忽略纹理覆盖",
    "entity_model_features.config.texture_override_mode.iris": "首先尝试 Iris",
    "entity_model_features.config.texture_override_mode.tooltip": "这控制 EMF 如何处理渲染具有覆盖纹理的子模型，例如，如果爬行者模型的头部子模型具有单独的纹理\n有两种方法可以处理这种情况，依赖于我的代码或依赖于 Iris 模组的一个技巧\n我的代码“有效”，但我不是渲染缓冲区的专家，可能会导致问题\nIris 的技巧使用了一种相当直接和似乎安全/稳定的方法，但我被告知这不是 Iris 预期的行为\n如果没有安装 Iris，则默认使用 EMF 代码，除非在调试子模型的纹理覆盖时，否则几乎总是保持默认设置",
    "entity_model_features.config.texture_override_mode": "子模型纹理处理",
    "entity_model_features.config.physics.1": "使用基础版模型",
    "entity_model_features.config.physics.2": "使用 EMF (CEM) 模型",
    "entity_model_features.config.render.normal": "正常",
    "entity_model_features.config.render.green": "闪绿色",
    "entity_model_features.config.render.lines": "轮廓",
    "entity_model_features.config.render.none": "禁用",
    "entity_model_features.config.render": "如何渲染自定义模型部分",
    "entity_model_features.config.render.tooltip": "更改自定义模型部分的渲染方式，不影响基础版模型部分\n正常 = 正常渲染\n闪绿色 = 自定义部分将闪绿色\n轮廓 = 模型部分的轮廓将渲染\n禁用 = 自定义模型部分将不会渲染",
    "entity_model_features.config.animate_once": "每个实体仅动画一次",
    "entity_model_features.config.animate_once.tooltip": "默认启用，此设置使实体模型仅在每个实体渲染一次时进行动画\n在游戏中完全正常，但在物品栏屏幕中可见的生物可能会出现奇怪的闪烁\n特别是如果它表示了已在世界中可见的真实生物"
}